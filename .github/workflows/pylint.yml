name: Pylint

on:
  schedule:
    - cron: '0 0 * * SUN'  # Runs at 00:00 UTC on Sundays
  workflow_dispatch:      # Allows manual triggering

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.9", "3.10"]

    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Analyze Code with Pylint
        run: |
          echo "Starting Pylint analysis..."
          # Find all Python files, excluding the 'arcpy_tools' directory
          FILES=$(git ls-files '*.py' | grep -v '^arcpy_tools/')
          
          # Check if there are Python files to lint
          if [ -z "$FILES" ]; then
            echo "No Python files found to lint."
            exit 0
          fi
          
          # Loop through each Python file and run Pylint individually
          for file in $FILES; do
            echo "------------------------------"
            echo "Pylint analysis for: $file"
            pylint "$file" --disable=duplicate-code
            echo "------------------------------"
          done
        continue-on-error: true  # Allows the workflow to continue even if Pylint fails
